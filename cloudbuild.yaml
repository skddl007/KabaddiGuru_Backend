options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_MEDIUM'

substitutions:
  _REGION: us-central1
  _SERVICE_NAME: kabaddi-guru-backend
  _REPO_NAME: kabaddi-backend

steps:
  # Build the backend container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/$_REPO_NAME:latest',
      '-t', 'gcr.io/$PROJECT_ID/$_REPO_NAME:$BUILD_ID',
      '.'
    ]
    
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_REPO_NAME:latest']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_REPO_NAME:$BUILD_ID']
    
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        set -e
        
        # Read environment variables from run-env.yaml if it exists
        if [ -f "run-env.yaml" ]; then
          echo "Using run-env.yaml for environment variables"
          gcloud run deploy $_SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$_REPO_NAME:$BUILD_ID \
            --region "$_REGION" \
            --platform managed \
            --allow-unauthenticated \
            --port 8000 \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 10 \
            --add-cloudsql-instances kabaddiguru:us-central1:kabaddi-sql \
            --env-vars-file run-env.yaml
        else
          echo "run-env.yaml not found, using default environment variables"
          gcloud run deploy $_SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$_REPO_NAME:$BUILD_ID \
            --region "$_REGION" \
            --platform managed \
            --allow-unauthenticated \
            --port 8000 \
            --memory 2Gi \
            --cpu 2 \
            --max-instances 10 \
            --add-cloudsql-instances kabaddiguru:us-central1:kabaddi-sql \
            --set-env-vars DEBUG="false",GEMINI_MODEL="gemini-2.5-flash-preview-05-20"
        fi

images:
  - 'gcr.io/$PROJECT_ID/$_REPO_NAME:latest'
  - 'gcr.io/$PROJECT_ID/$_REPO_NAME:$BUILD_ID'
